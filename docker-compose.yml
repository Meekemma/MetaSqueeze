version: '3.8'

services:
  backend:
    container_name: meta_squeeze
    build:
      context: .
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - "8001:8000"
    volumes:
      - .:/usr/src/app
      - ./db.sqlite3:/usr/src/app/db.sqlite3
    depends_on:
      redis:
        condition: service_healthy
    env_file:
      - .env
    restart: always

  redis:
    image: redis:alpine
    container_name: redis_server_squeez
    restart: always
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  celery:
    build: .
    container_name: celery_worker_squeez
    command: celery -A MetaSqueeze worker --loglevel=info
    volumes:
      - .:/usr/src/app
      - ./db.sqlite3:/usr/src/app/db.sqlite3
    depends_on:
      redis:
        condition: service_healthy
    env_file:
      - .env
    restart: always

  celery-beat:
    build: .
    container_name: celery_beat_squeez
    command: celery -A MetaSqueeze beat --loglevel=info
    volumes:
      - .:/usr/src/app
      - ./db.sqlite3:/usr/src/app/db.sqlite3
    depends_on:
      redis:
        condition: service_healthy
    env_file:
      - .env
    restart: always